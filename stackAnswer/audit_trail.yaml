Resources:

  LogGroup: # A new log group
    Type: AWS::Logs::LogGroup
    Properties:
    RetentionInDays: 365 # optional

  CloudTrailLogsRole: # A role for your trail
    Type: AWS::IAM::Role
    Properties:
    AssumeRolePolicyDocument:
      Statement:
      - Action: sts:AssumeRole
      Effect: Allow
      Principal:
        Service: cloudtrail.amazonaws.com
      Version: '2012-10-17'

  CloudTrailLogsPolicy: # The policy for your role
    Type: AWS::IAM::Policy
    Properties:
    PolicyDocument:
      Statement:
      - Action:
      - logs:PutLogEvents
      - logs:CreateLogStream
      Effect: Allow
      Resource:
        Fn::GetAtt:
        - LogGroup
        - Arn
      Version: '2012-10-17'
    PolicyName: DefaultPolicy
    Roles:
    - Ref: CloudTrailLogsRole

  OkElasticsearchDomain: 
    Type: AWS::Elasticsearch::Domain
    Properties:
      DomainName: !Sub '${AWS::StackName}'
      ElasticsearchClusterConfig: 
        InstanceCount: "1"
        InstanceType: "m3.medium.elasticsearch"
      AccessPolicies: 
        Statement: 
          - 
            Effect: "Allow"
            Action: "es:*"
            Resource: ""
            Resource: !Sub 'arn:aws:es:us-east-1:${AWS::AccountId}:domain/${AWS::StackName}/*'
            Principal: 
              AWS: "*"

  OKTrailBucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}
  OKTrailBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref OKTrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: !Sub 'arn:aws:s3:::${OKTrailBucket}'
        - Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          Resource: !Sub 'arn:aws:s3:::${OKTrailBucket}/AWSLogs/${AWS::AccountId}/*'
          Condition:
            StringEquals:
              's3:x-amz-acl': 'bucket-owner-full-control'
  Trail:
    DependsOn:
    - OKTrailBucketPolicy
    - CloudTrailLogsPolicy
    - CloudTrailLogsRole
    Type: 'AWS::CloudTrail::Trail'
    Properties:
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      EventSelectors: [
        {
          DataResources: [{Type: 'AWS::S3::Object', Values: ['arn:aws:s3:::']}],
          IncludeManagementEvents: true,
          ReadWriteType: All
        }
      ]
      S3BucketName: !Ref OKTrailBucket
      CloudWatchLogsLogGroupArn:
        Fn::GetAtt:
        - LogGroup
        - Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt:
        - CloudTrailLogsRole
        - Arn
